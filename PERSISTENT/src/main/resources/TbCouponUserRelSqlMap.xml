<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.TbCouponUserRel" class="com.hxh.model.TbCouponUserRel">
        <result property="userId" column="USER_ID"/>
        <result property="couponId" column="COUPON_ID"/>
        <result property="status" column="STATUS"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="TbCouponUserRel.columns">
	    <![CDATA[
        	USER_ID ,
        	COUPON_ID ,
        	STATUS 
	    ]]>
	</sql>
	
    <insert id="TbCouponUserRel.insert" >
    <![CDATA[
        INSERT INTO TB_COUPON_USER_REL (
        	USER_ID ,
        	COUPON_ID ,
        	STATUS 
        ) VALUES (
        	#userId# ,
        	#couponId# ,
        	#status# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Integer" type="post" keyProperty="" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="TbCouponUserRel.update" >
    <![CDATA[
        UPDATE TB_COUPON_USER_REL SET
	        USER_ID = #userId# ,
	        COUPON_ID = #couponId# ,
	        STATUS = #status# 
        WHERE 
    ]]>
    </update>

    <delete id="TbCouponUserRel.delete">
    <![CDATA[
        DELETE FROM TB_COUPON_USER_REL WHERE
    ]]>
    </delete>


    
    <select id="TbCouponUserRel.getById" resultMap="RM.TbCouponUserRel">
	    SELECT <include refid="TbCouponUserRel.columns"/>
	    <![CDATA[
	        FROM TB_COUPON_USER_REL 
	        WHERE
	    ]]>
    </select>

    <select id="TbCouponUserRel.getByUserId" resultMap="RM.TbCouponUserRel">
        SELECT <include refid="TbCouponUserRel.columns"/>
        <![CDATA[
	        FROM TB_COUPON_USER_REL
	        WHERE USER_ID = #userId#
	    ]]>
    </select>

	<sql id="TbCouponUserRel.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="userId">
		             USER_ID = #userId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="couponId">
		             COUPON_ID = #couponId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="status">
		             STATUS = #status#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="TbCouponUserRel.findPage.count" resultClass="long">
        SELECT count(*) FROM TB_COUPON_USER_REL <include refid="TbCouponUserRel.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="TbCouponUserRel.findPage" resultMap="RM.TbCouponUserRel">
    	SELECT <include refid="TbCouponUserRel.columns"/> FROM TB_COUPON_USER_REL 
		<include refid="TbCouponUserRel.findPage.where"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>



	 <select id="TbCouponUserRel.queryAll" resultMap="RM.TbCouponUserRel">
        SELECT <include refid="TbCouponUserRel.columns"/> FROM TB_COUPON_USER_REL
    </select>
	
</sqlMap>

