<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.TbUserExt" class="com.hxh.model.TbUserExt">
        <result property="userId" column="USER_ID"/>
        <result property="userMail" column="USER_MAIL"/>
        <result property="userBirday" column="USER_BIRDAY"/>
        <result property="userNumber" column="USER_NUMBER"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="TbUserExt.columns">
	    <![CDATA[
        	USER_ID ,
        	USER_MAIL ,
        	USER_BIRDAY ,
        	USER_NUMBER 
	    ]]>
	</sql>
	
    <insert id="TbUserExt.insert" >
    <![CDATA[
        INSERT INTO TB_USER_EXT (
        	USER_ID ,
        	USER_MAIL ,
        	USER_BIRDAY ,
        	USER_NUMBER 
        ) VALUES (
        	#userId# ,
        	#userMail# ,
        	#userBirday# ,
        	#userNumber# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <!--<selectKey resultClass="java.lang.Integer" type="post" keyProperty="" >-->
            <!--select last_insert_id()-->
        <!--</selectKey>-->
    </insert>

    <update id="TbUserExt.update" >
    <![CDATA[
        UPDATE TB_USER_EXT SET
	        USER_MAIL = #userMail# ,
	        USER_BIRDAY = #userBirday#
        WHERE
       	 	USER_ID = #userId#
    ]]>
    </update>

    <delete id="TbUserExt.delete">
    <![CDATA[
        DELETE FROM TB_USER_EXT WHERE
    ]]>
    </delete>


    
    <select id="TbUserExt.getById" resultMap="RM.TbUserExt">
	    SELECT <include refid="TbUserExt.columns"/>
	    <![CDATA[
	        FROM TB_USER_EXT 
	        WHERE USER_ID= #value#
	    ]]>
    </select>

	<sql id="TbUserExt.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="userId">
		             USER_ID = #userId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="userMail">
		             USER_MAIL = #userMail#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="userBirday">
		             USER_BIRDAY = #userBirday#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="userNumber">
		             USER_NUMBER = #userNumber#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="TbUserExt.findPage.count" resultClass="long">
        SELECT count(*) FROM TB_USER_EXT <include refid="TbUserExt.findPage.where"/>    
    </select>

	<select id="TbUserExt.getMaxNo" resultClass="java.lang.String">
        SELECT max(USER_NUMBER) FROM TB_USER_EXT
    </select>

    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="TbUserExt.findPage" resultMap="RM.TbUserExt">
    	SELECT <include refid="TbUserExt.columns"/> FROM TB_USER_EXT 
		<include refid="TbUserExt.findPage.where"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>



	 <select id="TbUserExt.queryAll" resultMap="RM.TbUserExt">
        SELECT <include refid="TbUserExt.columns"/> FROM TB_USER_EXT
    </select>
	
</sqlMap>

