<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.TbOrderProRel" class="com.hxh.model.TbOrderProRel">
        <result property="orderId" column="ORDER_ID"/>
        <result property="proId" column="PRO_ID"/>
        <result property="id" column="ID"/>
        <result property="price" column="PRICE"/>
        <result property="count" column="COUNT"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="TbOrderProRel.columns">
	    <![CDATA[
        	ORDER_ID ,
        	PRO_ID ,
        	ID ,
        	PRICE ,
        	COUNT 
	    ]]>
	</sql>
	
    <insert id="TbOrderProRel.insert" >
    <![CDATA[
        INSERT INTO TB_ORDER_PRO_REL (
        	ORDER_ID ,
        	PRO_ID ,
        	ID ,
        	PRICE ,
        	COUNT 
        ) VALUES (
        	#orderId# ,
        	#proId# ,
        	#id# ,
        	#price# ,
        	#count# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Integer" type="post" keyProperty="" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="TbOrderProRel.update" >
    <![CDATA[
        UPDATE TB_ORDER_PRO_REL SET
	        ORDER_ID = #orderId# ,
	        PRO_ID = #proId# ,
	        ID = #id# ,
	        PRICE = #price# ,
	        COUNT = #count# 
        WHERE 
    ]]>
    </update>

    <delete id="TbOrderProRel.delete">
    <![CDATA[
        DELETE FROM TB_ORDER_PRO_REL WHERE
    ]]>
    </delete>


    
    <select id="TbOrderProRel.getById" resultMap="RM.TbOrderProRel">
	    SELECT <include refid="TbOrderProRel.columns"/>
	    <![CDATA[
	        FROM TB_ORDER_PRO_REL 
	        WHERE 
	    ]]>
    </select>

	<sql id="TbOrderProRel.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="orderId">
		             ORDER_ID = #orderId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="proId">
		             PRO_ID = #proId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="id">
		             ID = #id#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="price">
		             PRICE = #price#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="count">
		             COUNT = #count#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="TbOrderProRel.findPage.count" resultClass="long">
        SELECT count(*) FROM TB_ORDER_PRO_REL <include refid="TbOrderProRel.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="TbOrderProRel.findPage" resultMap="RM.TbOrderProRel">
    	SELECT <include refid="TbOrderProRel.columns"/> FROM TB_ORDER_PRO_REL 
		<include refid="TbOrderProRel.findPage.where"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>



	<select id="TbOrderProRel.queryAll" resultMap="RM.TbOrderProRel">
        SELECT <include refid="TbOrderProRel.columns"/> FROM TB_ORDER_PRO_REL
    </select>

	<select id="TbOrderProRel.queryProductListByOrderId" parameterClass="string" resultClass="hashmap">
		SELECT rl.ID,rl.ORDER_ID,rl.PRO_ID,rl.PRICE,rl.COUNT,pr.PRO_NAME,pr.PRO_REALPRICE,pr.PRO_PRICE,pt.TYPE_NAME FROM TB_ORDER_PRO_REL rl
		LEFT JOIN TB_PRODUCT pr ON rl.PRO_ID = pr.PRO_ID LEFT OUTER JOIN TB_PRODUCT_TYPE pt on pr.TYPE_ID = pt.TYPE_ID
		WHERE rl.ORDER_ID = #value#
	</select>
	
</sqlMap>

