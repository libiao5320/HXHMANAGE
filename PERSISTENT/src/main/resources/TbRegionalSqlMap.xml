<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.TbRegional" class="com.hxh.model.TbRegional">
        <result property="regionalId" column="REGIONAL_ID"/>
        <result property="regionalType" column="REGIONAL_TYPE"/>
        <result property="regionalName" column="REGIONAL_NAME"/>
        <result property="regionalParent" column="REGIONAL_PARENT"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="TbRegional.columns">
	    <![CDATA[
        	REGIONAL_ID ,
        	REGIONAL_TYPE ,
        	REGIONAL_NAME ,
        	REGIONAL_PARENT 
	    ]]>
	</sql>
	
    <insert id="TbRegional.insert" >
    <![CDATA[
        INSERT INTO TB_REGIONAL (
        	REGIONAL_ID ,
        	REGIONAL_TYPE ,
        	REGIONAL_NAME ,
        	REGIONAL_PARENT 
        ) VALUES (
        	#regionalId# ,
        	#regionalType# ,
        	#regionalName# ,
        	#regionalParent# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Integer" type="post" keyProperty="regionalId" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="TbRegional.update" >
    <![CDATA[
        UPDATE TB_REGIONAL SET
	        REGIONAL_TYPE = #regionalType# ,
	        REGIONAL_NAME = #regionalName# ,
	        REGIONAL_PARENT = #regionalParent# 
        WHERE 
	        REGIONAL_ID = #regionalId# 
    ]]>
    </update>

    <delete id="TbRegional.delete">
    <![CDATA[
        DELETE FROM TB_REGIONAL WHERE
        REGIONAL_ID = #regionalId# 
    ]]>
    </delete>


    
    <select id="TbRegional.getById" resultMap="RM.TbRegional">
	    SELECT <include refid="TbRegional.columns"/>
	    <![CDATA[
	        FROM TB_REGIONAL 
	        WHERE 
		        REGIONAL_ID = #regionalId# 
	    ]]>
    </select>

	<sql id="TbRegional.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="regionalId">
		             REGIONAL_ID = #regionalId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="regionalType">
		             REGIONAL_TYPE = #regionalType#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="regionalName">
		             REGIONAL_NAME = #regionalName#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="regionalParent">
		             REGIONAL_PARENT = #regionalParent#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="TbRegional.findPage.count" resultClass="long">
        SELECT count(*) FROM TB_REGIONAL <include refid="TbRegional.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="TbRegional.findPage" resultMap="RM.TbRegional">
    	SELECT <include refid="TbRegional.columns"/> FROM TB_REGIONAL 
		<include refid="TbRegional.findPage.where"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>



	 <select id="TbRegional.queryAll" resultMap="RM.TbRegional">
        SELECT <include refid="TbRegional.columns"/> FROM TB_REGIONAL
    </select>

	<select id="TbRegional.queryChildren" parameterClass="string" resultMap="RM.TbRegional">
		SELECT <include refid="TbRegional.columns"/> FROM TB_REGIONAL
		<isNotEmpty>
			WHERE REGIONAL_PARENT=#parentId#
		</isNotEmpty>
		<isEmpty>
			WHERE REGIONAL_PARENT is NULL
		</isEmpty>
	</select>

	<select id="TbRegional.queryRelate" parameterClass="string" resultMap="RM.TbRegional">
		SELECT <include refid="TbRegional.columns"/> FROM TB_REGIONAL
		where REGIONAL_PARENT = (
			select REGIONAL_PARENT from TB_REGIONAL where REGIONAL_ID = #reglId#
		)
	</select>
	
</sqlMap>

