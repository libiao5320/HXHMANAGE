<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.TbUserAccount" class="com.hxh.model.TbUserAccount">
        <result property="accountId" column="ACCOUNT_ID"/>
        <result property="userId" column="USER_ID"/>
        <result property="accountBal" column="ACCOUNT_BAL"/>
        <result property="accountStatus" column="ACCOUNT_STATUS"/>
        <result property="accountPwd" column="ACCOUNT_PWD"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="TbUserAccount.columns">
	    <![CDATA[
        	ACCOUNT_ID ,
        	USER_ID ,
        	ACCOUNT_BAL ,
        	ACCOUNT_STATUS ,
        	ACCOUNT_PWD 
	    ]]>
	</sql>
	
    <insert id="TbUserAccount.insert" >
    <![CDATA[
        INSERT INTO TB_USER_ACCOUNT (
        	ACCOUNT_ID ,
        	USER_ID ,
        	ACCOUNT_BAL ,
        	ACCOUNT_STATUS ,
        	ACCOUNT_PWD 
        ) VALUES (
        	#accountId# ,
        	#userId# ,
        	#accountBal# ,
        	#accountStatus# ,
        	#accountPwd# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Integer" type="post" keyProperty="accountId" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="TbUserAccount.update" >
    <![CDATA[
        UPDATE TB_USER_ACCOUNT SET
	        ACCOUNT_STATUS = #accountStatus#
        WHERE
	        ACCOUNT_ID = #accountId# 
    ]]>
    </update>

    <delete id="TbUserAccount.delete">
    <![CDATA[
        DELETE FROM TB_USER_ACCOUNT WHERE
        ACCOUNT_ID = #accountId# 
    ]]>
    </delete>


    
    <select id="TbUserAccount.getById" resultMap="RM.TbUserAccount">
	    SELECT <include refid="TbUserAccount.columns"/>
	    <![CDATA[
	        FROM TB_USER_ACCOUNT 
	        WHERE 
		        ACCOUNT_ID = #accountId# 
	    ]]>
    </select>

	<select id="TbUserAccount.queryByUserId" resultMap="RM.TbUserAccount">
		SELECT <include refid="TbUserAccount.columns"/>
		<![CDATA[
	        FROM TB_USER_ACCOUNT
	        WHERE
		        USER_ID = #userId#
	    ]]>
	</select>


	<sql id="TbUserAccount.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="accountId">
		             ACCOUNT_ID = #accountId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="userId">
		             USER_ID = #userId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="accountBal">
		             ACCOUNT_BAL = #accountBal#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="accountStatus">
		             ACCOUNT_STATUS = #accountStatus#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="accountPwd">
		             ACCOUNT_PWD = #accountPwd#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="TbUserAccount.findPage.count" resultClass="long">
        SELECT count(*) FROM TB_USER_ACCOUNT <include refid="TbUserAccount.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="TbUserAccount.findPage" resultMap="RM.TbUserAccount">
    	SELECT <include refid="TbUserAccount.columns"/> FROM TB_USER_ACCOUNT 
		<include refid="TbUserAccount.findPage.where"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>



	 <select id="TbUserAccount.queryAll" resultMap="RM.TbUserAccount">
        SELECT <include refid="TbUserAccount.columns"/> FROM TB_USER_ACCOUNT
    </select>
	
</sqlMap>

